name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission to gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

  build-proxy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install build tools and cross-compiler
      run: sudo apt-get update && sudo apt-get install -y gcc make gcc-aarch64-linux-gnu zip
    - name: Compile the proxy for all architectures
      run: make -C proxy all
    - name: Prepare package for artifact
      run: |
        mkdir -p package/amd64
        mkdir -p package/arm64
        mv proxy/udp_proxy_amd64 package/amd64/udp_proxy
        mv proxy/udp_proxy_arm64 package/arm64/udp_proxy
        cp proxy/install-service.sh package/
        cp proxy/proxy.service package/
        cd package
        zip -r ../udp-proxy-package.zip .
    - name: Upload Proxy Artifact
      uses: actions/upload-artifact@v4
      with:
        name: udp-proxy-package
        path: udp-proxy-package.zip

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build-android, build-proxy]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release and Bump Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat VERSION)
          echo "Current version: $VERSION"

          if gh release view "$VERSION" >/dev/null 2>&1; then
            echo "Release $VERSION exists. Bumping version..."
            VERSION=$(echo "$VERSION" | awk -F. -v OFS=. '{$NF = $NF + 1; print}')
            echo "$VERSION" > VERSION
            echo "New version: $VERSION"

            git add VERSION
            git commit -m "chore: Bump version to $VERSION"
            git push
          else
            echo "Release $VERSION does not exist. Creating it now."
          fi

          gh release create "$VERSION" \
            --title "Release $VERSION" \
            --notes "Automated release of version $VERSION." \
            artifacts/app-debug/app-debug.apk \
            artifacts/udp-proxy-package/udp-proxy-package.zip