name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission to gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

  build-xinput:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v4
    - name: Install Wine build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-9 g++-9 \
          gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 \
          g++-mingw-w64-i686 g++-mingw-w64-x86-64 \
          autoconf bison flex \
          bubblewrap debootstrap \
          make zip unzip wget git
    - name: Create Ubuntu bootstraps
      run: |
        cd xinput_dev
        sudo bash create_ubuntu_bootstraps.sh
    - name: Download Wine source
      run: |
        cd xinput_dev/work_temp
        git clone --branch wine-9.3 --depth 1 https://github.com/wine-mirror/wine.git
    - name: Prepare Wine build
      run: |
        cd xinput_dev
        export BUILD_DIR="${GITHUB_WORKSPACE}/xinput_dev/work_temp"
        bash prepare.sh
    - name: Compile Xinput DLLs
      run: |
        cd xinput_dev
        export BUILD_DIR="${GITHUB_WORKSPACE}/xinput_dev/work_temp"
        bash compile_xinput.sh
    - name: Package Xinput DLLs
      run: |
        cd xinput_dev/output
        zip -r ../../xinput-dlls.zip 32/ 64/
    - name: Upload Xinput DLLs
      uses: actions/upload-artifact@v4
      with:
        name: xinput-dlls
        path: xinput-dlls.zip
      if: success()

  release:
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main' &&
      (needs.build-android.result == 'success' && needs.build-xinput.result == 'success')
    needs: [build-android, build-xinput]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release and Bump Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat VERSION)
          echo "Current version: $VERSION"

          if gh release view "$VERSION" >/dev/null 2>&1; then
            echo "Release $VERSION exists. Bumping version..."
            VERSION=$(echo "$VERSION" | awk -F. -v OFS=. '{$NF = $NF + 1; print}')
            echo "$VERSION" > VERSION
            echo "New version: $VERSION"

            git add VERSION
            git commit -m "chore: Bump version to $VERSION"
            git push
          else
            echo "Release $VERSION does not exist. Creating it now."
          fi

          gh release create "$VERSION" \
            --title "Release $VERSION" \
            --notes "Automated release of version $VERSION. Includes Android app and Xinput DLLs with direct connection support. Set XINPUT_BRIDGE_IP environment variable or let auto-discovery find your device." \
            artifacts/app-debug/app-debug.apk \
            artifacts/xinput-dlls/xinput-dlls.zip